do local Players=game:GetService("Players");local RunService=game:GetService("RunService");local Player=Players.LocalPlayer;local SoundService=game:GetService("SoundService");local UserInputService=game:GetService("UserInputService");local Targets={};local AllBool=false;local TargetPlayers={};local FlingConnections={};local FlingLoop=false;local OriginalPosition=nil;local function GetPlayer(Name) Name=Name:lower();if (Name=="all") then AllBool=true;return;elseif (Name=="others") then AllBool=false;for _,x in ipairs(Players:GetPlayers()) do if (x~=Player) then table.insert(TargetPlayers,x);end end return;elseif (Name=="random") then local GetPlayers=Players:GetPlayers();if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player));end return GetPlayers[math.random( #GetPlayers)];else for _,x in next,Players:GetPlayers() do if (x~=Player) then if (x.Name:lower():match(Name) or x.DisplayName:lower():match(Name)) then return x;end end end end end local function Message(_Title,_Text,Time) game:GetService("StarterGui"):SetCore("SendNotification",{Title=_Title,Text=_Text,Duration=Time});end local function MakeInvisible() local Character=Player.Character;if Character then for _,part in pairs(Character:GetDescendants()) do if part:IsA("BasePart") then part.LocalTransparencyModifier=1;if (part:IsA("MeshPart") or part:IsA("Part")) then part.Material=Enum.Material.ForceField;end elseif part:IsA("Decal") then part.Transparency=1;elseif (part:IsA("Accessory") and part:FindFirstChild("Handle")) then part.Handle.LocalTransparencyModifier=1;end end end end local function MakeVisible() local Character=Player.Character;if Character then for _,part in pairs(Character:GetDescendants()) do if part:IsA("BasePart") then part.LocalTransparencyModifier=0;if (part:IsA("MeshPart") or part:IsA("Part")) then part.Material=Enum.Material.Plastic;end elseif (part:IsA("Accessory") and part:FindFirstChild("Handle")) then part.Handle.LocalTransparencyModifier=0;end end end end local function SkidFling(TargetPlayer) local Character=Player.Character;local Humanoid=Character and Character:FindFirstChildOfClass("Humanoid") ;local RootPart=Humanoid and Humanoid.RootPart ;local TCharacter=TargetPlayer.Character;local THumanoid=TCharacter and TCharacter:FindFirstChildOfClass("Humanoid") ;local TRootPart=THumanoid and THumanoid.RootPart ;local THead=TCharacter and TCharacter:FindFirstChild("Head") ;local Accessory=TCharacter and TCharacter:FindFirstChildOfClass("Accessory") ;local Handle=Accessory and Accessory:FindFirstChild("Handle") ;if (Character and Humanoid and RootPart) then if (RootPart.Velocity.Magnitude<50) then getgenv().OldPos=RootPart.CFrame;end if (THumanoid and THumanoid.Sit and  not AllBool) then return Message("Error Occurred","Target is sitting",5);end if THead then workspace.CurrentCamera.CameraSubject=THead;elseif ( not THead and Handle) then workspace.CurrentCamera.CameraSubject=Handle;elseif (THumanoid and TRootPart) then workspace.CurrentCamera.CameraSubject=THumanoid;end if  not TCharacter:FindFirstChildWhichIsA("BasePart") then return;end local function FPos(BasePart,Pos,Ang) RootPart.CFrame=CFrame.new(BasePart.Position) * Pos * Ang ;Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang );RootPart.Velocity=Vector3.new(1000000000,1000000000 * 10 ,1000000000);RootPart.RotVelocity=Vector3.new(10000000000,10000000000,10000000000);end local function SFBasePart(BasePart) local TimeToWait=2;local Time=tick();local Angle=0;repeat if (RootPart and THumanoid) then if (BasePart.Velocity.Magnitude<50) then Angle=Angle + 100 ;FPos(BasePart,CFrame.new(0,1.5,0) + ((THumanoid.MoveDirection * BasePart.Velocity.Magnitude)/1.25) ,CFrame.Angles(math.rad(Angle),0,0));task.wait();FPos(BasePart,CFrame.new(0, -1.5,0) + ((THumanoid.MoveDirection * BasePart.Velocity.Magnitude)/1.25) ,CFrame.Angles(math.rad(Angle),0,0));task.wait();FPos(BasePart,CFrame.new(2.25,1.5, -2.25) + ((THumanoid.MoveDirection * BasePart.Velocity.Magnitude)/1.25) ,CFrame.Angles(math.rad(Angle),0,0));task.wait();FPos(BasePart,CFrame.new( -2.25, -1.5,2.25) + ((THumanoid.MoveDirection * BasePart.Velocity.Magnitude)/1.25) ,CFrame.Angles(math.rad(Angle),0,0));task.wait();FPos(BasePart,CFrame.new(0,1.5,0) + THumanoid.MoveDirection ,CFrame.Angles(math.rad(Angle),0,0));task.wait();FPos(BasePart,CFrame.new(0, -1.5,0) + THumanoid.MoveDirection ,CFrame.Angles(math.rad(Angle),0,0));task.wait();else FPos(BasePart,CFrame.new(0,1.5,THumanoid.WalkSpeed),CFrame.Angles(math.rad(90),0,0));task.wait();FPos(BasePart,CFrame.new(0, -1.5, -THumanoid.WalkSpeed),CFrame.Angles(0,0,0));task.wait();FPos(BasePart,CFrame.new(0,1.5,THumanoid.WalkSpeed),CFrame.Angles(math.rad(90),0,0));task.wait();FPos(BasePart,CFrame.new(0,1.5,TRootPart.Velocity.Magnitude/1.25 ),CFrame.Angles(math.rad(90),0,0));task.wait();FPos(BasePart,CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude/1.25 ),CFrame.Angles(0,0,0));task.wait();FPos(BasePart,CFrame.new(0,1.5,TRootPart.Velocity.Magnitude/1.25 ),CFrame.Angles(math.rad(90),0,0));task.wait();FPos(BasePart,CFrame.new(0, -1.5,0),CFrame.Angles(math.rad(90),0,0));task.wait();FPos(BasePart,CFrame.new(0, -1.5,0),CFrame.Angles(0,0,0));task.wait();FPos(BasePart,CFrame.new(0, -1.5,0),CFrame.Angles(math.rad( -90),0,0));task.wait();FPos(BasePart,CFrame.new(0, -1.5,0),CFrame.Angles(0,0,0));task.wait();end else break;end until (BasePart.Velocity.Magnitude>500) or (BasePart.Parent~=TargetPlayer.Character) or (TargetPlayer.Parent~=Players) or ( not TargetPlayer.Character==TCharacter) or THumanoid.Sit or (Humanoid.Health<=0) or (tick()>(Time + TimeToWait))  end workspace.FallenPartsDestroyHeight=NaN;local BV=Instance.new("BodyVelocity");BV.Name="EpixVel";BV.Parent=RootPart;BV.Velocity=Vector3.new(20000000000,20000000000,20000000000);BV.MaxForce=Vector3.new(1/0 ,2/0 ,2/0 );Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false);if (TRootPart and THead) then if ((TRootPart.CFrame.p-THead.CFrame.p).Magnitude>5) then SFBasePart(THead);else SFBasePart(TRootPart);end elseif (TRootPart and  not THead) then SFBasePart(TRootPart);elseif ( not TRootPart and THead) then SFBasePart(THead);elseif ( not TRootPart and  not THead and Accessory and Handle) then SFBasePart(Handle);else return Message("Error Occurred","Target is missing everything",5);end BV:Destroy();Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true);workspace.CurrentCamera.CameraSubject=Humanoid;repeat RootPart.CFrame=getgenv().OldPos * CFrame.new(0,0.5,0) ;Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0,0.5,0) );Humanoid:ChangeState("GettingUp");table.foreach(Character:GetChildren(),function(_,x) if x:IsA("BasePart") then x.Velocity,x.RotVelocity=Vector3.new(),Vector3.new();end end);task.wait();until (RootPart.Position-getgenv().OldPos.p).Magnitude<25  workspace.FallenPartsDestroyHeight=getgenv().FPDH;MakeVisible();else return Message("Error Occurred","Random error",5);end end local function LoopFlingOn() if  not FlingLoop then FlingLoop=true;TargetPlayers={};if (Player.Character and Player.Character.PrimaryPart) then OriginalPosition=Player.Character.PrimaryPart.CFrame;end if Targets[1] then for _,x in next,Targets do local targetPlayer=GetPlayer(x);if targetPlayer then table.insert(TargetPlayers,targetPlayer);end end end for _,targetPlayer in next,TargetPlayers do local connection=targetPlayer.CharacterAdded:Connect(function() if FlingLoop then SkidFling(targetPlayer);end end);table.insert(FlingConnections,connection);end MakeInvisible();local flingLoopConnection;flingLoopConnection=RunService.Heartbeat:Connect(function() if FlingLoop then if AllBool then for _,x in next,Players:GetPlayers() do if (x~=Player) then SkidFling(x);end end else for _,x in next,TargetPlayers do if (x and (x~=Player)) then SkidFling(x);end end end else flingLoopConnection:Disconnect();end task.wait(0.07);end);end end local function LoopFlingOff() FlingLoop=false;TargetPlayers={};for _,connection in ipairs(FlingConnections) do connection:Disconnect();end FlingConnections={};MakeVisible();if (Player.Character and Player.Character.PrimaryPart and OriginalPosition) then local newPosition=OriginalPosition * CFrame.new(0,100,0) ;Player.Character:SetPrimaryPartCFrame(newPosition);end end local ScreenGui=Instance.new("ScreenGui");ScreenGui.Parent=Player.PlayerGui;local Frame=Instance.new("Frame");Frame.Size=UDim2.new(0,200,0,150);Frame.Position=UDim2.new(0.5, -100,0.5, -75);Frame.BackgroundColor3=Color3.new(0,0,0);Frame.BackgroundTransparency=0.2;Frame.Parent=ScreenGui;local FrameOutline=Instance.new("UIStroke");FrameOutline.Color=Color3.new(255,0,0);FrameOutline.Thickness=4;FrameOutline.Parent=Frame;local UICorner=Instance.new("UICorner");UICorner.CornerRadius=UDim.new(0,12);UICorner.Parent=Frame;local NameInput=Instance.new("TextBox");NameInput.Size=UDim2.new(0,180,0,30);NameInput.Position=UDim2.new(0,10,0,10);NameInput.PlaceholderText="Enter player name";NameInput.BackgroundColor3=Color3.new(0,0,0);NameInput.BackgroundTransparency=0.2;NameInput.TextColor3=Color3.new(1,1,1);NameInput.Parent=Frame;local ToggleButton=Instance.new("TextButton");ToggleButton.Size=UDim2.new(0,180,0,40);ToggleButton.Position=UDim2.new(0,10,0,50);ToggleButton.Text="Start Loop Fling";ToggleButton.BackgroundColor3=Color3.new(0,0,0);ToggleButton.BackgroundTransparency=0.2;ToggleButton.TextColor3=Color3.new(1,1,1);ToggleButton.Parent=Frame;local ToggleUICorner=Instance.new("UICorner");ToggleUICorner.CornerRadius=UDim.new(0,12);ToggleUICorner.Parent=ToggleButton;local ViewButton=Instance.new("TextButton");ViewButton.Size=UDim2.new(0,180,0,40);ViewButton.Position=UDim2.new(0,10,0,100);ViewButton.Text="View";ViewButton.BackgroundColor3=Color3.new(0,0,0);ViewButton.BackgroundTransparency=0.2;ViewButton.TextColor3=Color3.new(1,1,1);ViewButton.Parent=Frame;local ViewUICorner=Instance.new("UICorner");ViewUICorner.CornerRadius=UDim.new(0,12);ViewUICorner.Parent=ViewButton;local ToggleState=false;local Sound=Instance.new("Sound");Sound.SoundId="rbxassetid://9120299810";Sound.Volume=1;Sound.Parent=SoundService;NameInput:GetPropertyChangedSignal("Text"):Connect(function() Sound:Play();end);ToggleButton.MouseButton1Click:Connect(function() ToggleState= not ToggleState;if ToggleState then Targets={NameInput.Text};ToggleButton.Text="Stop Loop Fling";LoopFlingOn();else ToggleButton.Text="Start Loop Fling";LoopFlingOff();end end);local isViewing=false;local viewedTarget=nil;ViewButton.MouseButton1Click:Connect(function() if  not isViewing then local targetPlayer=GetPlayer(NameInput.Text);if (targetPlayer and targetPlayer.Character) then local targetHead=targetPlayer.Character:FindFirstChild("Head");local targetHumanoid=targetPlayer.Character:FindFirstChildOfClass("Humanoid");if targetHead then workspace.CurrentCamera.CameraSubject=targetHead;isViewing=true;viewedTarget=targetPlayer;ViewButton.Text="Unview";elseif targetHumanoid then workspace.CurrentCamera.CameraSubject=targetHumanoid;isViewing=true;viewedTarget=targetPlayer;ViewButton.Text="Unview";else Message("Error Occurred","Target player has no head or humanoid",5);end else Message("Error Occurred","Target player not found",5);end elseif Player.Character then local localHumanoid=Player.Character:FindFirstChildOfClass("Humanoid");if localHumanoid then workspace.CurrentCamera.CameraSubject=localHumanoid;isViewing=false;viewedTarget=nil;ViewButton.Text="View";else Message("Error Occurred","Local player has no humanoid",5);end end end);Players.PlayerRemoving:Connect(function(leavingPlayer) if (viewedTarget==leavingPlayer) then if Player.Character then local localHumanoid=Player.Character:FindFirstChildOfClass("Humanoid");if localHumanoid then workspace.CurrentCamera.CameraSubject=localHumanoid;end end isViewing=false;viewedTarget=nil;ViewButton.Text="View";end end);Player.CharacterAdded:Connect(function() if isViewing then if Player.Character then local localHumanoid=Player.Character:FindFirstChildOfClass("Humanoid");if localHumanoid then workspace.CurrentCamera.CameraSubject=localHumanoid;end end isViewing=false;viewedTarget=nil;ViewButton.Text="View";end end);local dragging;local dragInput;local dragStart;local startPos;local function update(input) local delta=input.Position-dragStart ;Frame.Position=UDim2.new(startPos.X.Scale,startPos.X.Offset + delta.X ,startPos.Y.Scale,startPos.Y.Offset + delta.Y );end Frame.InputBegan:Connect(function(input) if ((input.UserInputType==Enum.UserInputType.MouseButton1) or (input.UserInputType==Enum.UserInputType.Touch)) then dragging=true;dragStart=input.Position;startPos=Frame.Position;input.Changed:Connect(function() if (input.UserInputState==Enum.UserInputState.End) then dragging=false;end end);end end);Frame.InputChanged:Connect(function(input) if ((input.UserInputType==Enum.UserInputType.MouseMovement) or (input.UserInputType==Enum.UserInputType.Touch)) then dragInput=input;end end);UserInputService.InputChanged:Connect(function(input) if (dragging and (input==dragInput)) then update(input);end end);local function DisableCollision() local Character=Player.Character;if Character then local HumanoidRootPart=Character:FindFirstChild("HumanoidRootPart");if HumanoidRootPart then HumanoidRootPart.CanCollide=false;end end end local function AddSelectionBox() local Character=Player.Character;if Character then local HumanoidRootPart=Character:FindFirstChild("HumanoidRootPart");if HumanoidRootPart then local SelectionBox=Instance.new("SelectionBox");SelectionBox.Adornee=HumanoidRootPart;SelectionBox.Parent=HumanoidRootPart;SelectionBox.Color3=Color3.new(1,0,0);SelectionBox.LineThickness=0.05;end end end DisableCollision();AddSelectionBox();if Player.Character then AdjustHumanoidRootPart();end end
